###################################################
### COMPILANDO FONTES                           ###
###################################################

aluno11@ppa-1 ~ $ make
gcc -Wall -O3 -c matrizv3.c
gcc -Wall -O3 -c toolsv3.c
gcc -Wall -O3 -c matriz-operacoesv3.c
gcc -Wall -O3 matriz-operacoesv3.o matrizv3.o toolsv3.o mainEx03.c -o mainEx03 
gcc -Wall -O3 matrizv3.o toolsv3.o gera_matrizv3.c -o gmat 


####### Exemplo de Execução #######
./mainEx03 mat_a3x4.example mat_b4x3.example


###################################################################################
###         EXECUCAO da MULTIPLICACAO de MATRIZES em BLOCOS                     ###
###################################################################################

aluno11@ppa-1 ~ $ valgrind ./mainEx03 mat_a3x4.example mat_b4x3.example
==1512== Memcheck, a memory error detector
==1512== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1512== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==1512== Command: ./mainEx03 mat_a3x4.example mat_b4x3.example
==1512== 
I-Imprimindo Matriz A.
        (0)     (1)     (2)     (3)
(0)     1       2       1       2
(1)     2       1       3       1
(2)     2       1       2       1
F-Imprimindo Matriz A.
I-Imprimindo Matriz B.
        (0)     (1)     (2)
(0)     3       4       3
(1)     1       1       2
(2)     4       1       4
(3)     2       0       1
F-Imprimindo Matriz B.

%%%%%%%%

 ##### multiplicar_t1 de Matrizes #####
        (0)     (1)     (2)
(0)     13      7       13
(1)     21      12      21
(2)     17      11      17
        Runtime: 0.002921
I-Imprimindo Matriz mmult[0].
        (0)     (1)     (2)
(0)     13      7       13
(1)     21      12      21
(2)     17      11      17
F-Imprimindo Matriz mmult[0].

 ##### multiplicar_t1 de Matrizes - MULTIPLICACAO <por bloco> #####

I-Imprimindo Matriz mmultBloco[0].
        (0)     (1)     (2)
(0)     13      7       13
(1)     21      12      21
(2)     17      11      17

F-Imprimindo Matriz mmultBloco[0].
        Runtime: 0.007482

 ##### Comparação dos resultados da Multiplicação de matrizes #####
[mult_t0 vs multbloco_t0]       VERIFICADO (MCOMPARAR): Matrizes identicas

==1512== 
==1512== HEAP SUMMARY:
==1512==     in use at exit: 528 bytes in 31 blocks
==1512==   total heap usage: 111 allocs, 80 frees, 21,173 bytes allocated
==1512== 
==1512== LEAK SUMMARY:
==1512==    definitely lost: 96 bytes in 5 blocks
==1512==    indirectly lost: 432 bytes in 26 blocks
==1512==      possibly lost: 0 bytes in 0 blocks
==1512==    still reachable: 0 bytes in 0 blocks
==1512==         suppressed: 0 bytes in 0 blocks
==1512== Rerun with --leak-check=full to see details of leaked memory
==1512== 
==1512== For counts of detected and suppressed errors, rerun with: -v
==1512== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)