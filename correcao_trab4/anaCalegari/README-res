
*******************************************************************************************************************
*******************************************************************************************************************
* Compilando ******************************************************************************************************
*******************************************************************************************************************
*******************************************************************************************************************

aluno2@ppa-1 ~/Threads_Final $ make
gcc -Wall -O3 -c matrizv3.c
gcc -Wall -O3 -c toolsv3.c
gcc -Wall -O3 -c matriz-operacoesv3.c
gcc -Wall -O3 -c matriz-operacoes-threads.c
gcc -Wall -O3 matriz-operacoes-threads.o matriz-operacoesv3.o matrizv3.o toolsv3.o mainEx04.c -o mainEx04 -lpthread
gcc -Wall -O3 matriz-operacoesv3.o matrizv3.o toolsv3.o mainEx03a.c -o mainEx03a -lpthread
gcc -Wall -O3 matriz-operacoesv3.o matrizv3.o toolsv3.o mainEx02.c -o mainEx02 -lpthread
gcc -Wall -O3 matrizv3.o toolsv3.o gera_matrizv3.c -o gmat -lpthread
gcc -Wall -O3 matrizv3.o toolsv3.o mainEx01.c -o mainEx01 -lpthread


####### Exemplo de Execução #######
./mainEx04 mat_a3x4.example mat_b4x3.example 2

*******************************************************************************************************************
*******************************************************************************************************************
* Threads, executando mainEx04 ************************************************************************************
*******************************************************************************************************************
*******************************************************************************************************************
aluno2@ppa-1 ~/Threads_Final $ valgrind ./mainEx04 mat_a3x4.example mat_b4x3.example 2
==15432== Memcheck, a memory error detector
==15432== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==15432== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==15432== Command: ./mainEx04 mat_a3x4.example mat_b4x3.example 2
==15432== 

 ***************************************** 
 Matriz A
 ***************************************** 
Impressao <mimprimir>: Matriz NxM(3,4)
        [C0]    [C1]    [C2]    [C3]
[L0]    1       2       1       2
[L1]    2       1       3       1
[L2]    2       1       2       1

 ***************************************** 
 Matriz B
 ***************************************** 
Impressao <mimprimir>: Matriz NxM(4,3)
        [C0]    [C1]    [C2]
[L0]    3       4       3
[L1]    1       1       2
[L2]    4       1       4
[L3]    2       0       1

 *** Multiplicação Sequencial: Média = 0.000365

 *** Multiplicação Sequencial em Bloco: Média = 0.000365

 *** Multiplicação MultiThread: Média = 0.009931

 *** Multiplicação MultiThreads em Bloco: Média = 0.000588
                                              
 ***************************************** 
 Comparar resultados e tempos
 ***************************************** 

 COMPARAR MATRIZ_SeqC c/ MATRIZ_SeqBlC 
Aviso <mcomparar>: Nao existe nenhuma diferenca entre as matrizes


 COMPARAR MATRIZ_SeqC c/ MATRIZ_ThreadC 
Aviso <mcomparar>: Nao existe nenhuma diferenca entre as matrizes


 COMPARAR MATRIZ_SeqC c/ MATRIZ_ThreadBlC
Aviso <mcomparar>: Nao existe nenhuma diferenca entre as matrizes

TEMPO_MEDIO MATRIZ_SeqC.....: 0.000365
TEMPO_MEDIO MATRIZ_SeqBlC...: 0.000412
TEMPO_MEDIO MATRIZ_ThreadC..: 0.009931
TEMPO_MEDIO MATRIZ_ThreadBlC: 0.000588

SPEEDUP (MATRIZ_C)..........: 0.036732
SPEEDUP (MATRIZ_BLC)........: 0.700738

==15432== 
==15432== HEAP SUMMARY:
==15432==     in use at exit: 13,244 bytes in 721 blocks
==15432==   total heap usage: 819 allocs, 98 frees, 43,865 bytes allocated
==15432== 
==15432== LEAK SUMMARY:
==15432==    definitely lost: 4,048 bytes in 131 blocks
==15432==    indirectly lost: 9,196 bytes in 590 blocks
==15432==      possibly lost: 0 bytes in 0 blocks
==15432==    still reachable: 0 bytes in 0 blocks
==15432==         suppressed: 0 bytes in 0 blocks
==15432== Rerun with --leak-check=full to see details of leaked memory
==15432== 
==15432== For counts of detected and suppressed errors, rerun with: -v
==15432== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
aluno2@ppa-1 ~/Threads_Final $ 